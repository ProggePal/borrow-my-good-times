@tailwind base;
@tailwind components;
@tailwind utilities;

.honeypot-field {
    display: none;
}

.noise {
    background-color: #deffb7;
    background-image: url(img/5-o.png);
}
/* Way to cool button */
.pushable {
    position: relative;
    border: none;
    background: transparent;
    padding: 0;
    user-select: none;
    cursor: pointer;
    outline-offset: 4px;
    transition: filter 250ms;
}
.shadow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 12px;
    background: hsl(0deg 0% 0% / 0.25);
    will-change: transform;
    transform: translateY(2px);
    transition: transform 600ms cubic-bezier(0.3, 0.7, 0.4, 1);
}
.edge {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 12px;
    background-color: #5f00d1;
    /* background: linear-gradient(
        to left,
        hsl(250deg 100% 16%) 0%,
        hsl(250deg 100% 32%) 8%,
        hsl(250deg 100% 32%) 92%,
        hsl(250deg 100% 16%) 100%
    ); */
}
.front {
    display: block;
    position: relative;
    padding: 12px 42px;
    border-radius: 12px;
    font-size: 1.25rem;
    color: white;
    background: #7c0fff;
    /* hsl(167deg 100% 47%); */
    border-color: #370079;
    /* hsl(167deg 100% 27%); */
    border-width: 4px;
    will-change: transform;
    transform: translateY(-4px);
    transition: transform 600ms cubic-bezier(0.3, 0.7, 0.4, 1);
}
.pushable:hover {
    filter: brightness(110%);
}
.pushable:hover .front {
    transform: translateY(-6px);
    transition: transform 250ms cubic-bezier(0.3, 0.7, 0.4, 1.5);
}
.pushable:active .front {
    transform: translateY(-2px);
    transition: transform 34ms;
}
.pushable:hover .shadow {
    transform: translateY(4px);
    transition: transform 250ms cubic-bezier(0.3, 0.7, 0.4, 1.5);
}
.pushable:active .shadow {
    transform: translateY(1px);
    transition: transform 34ms;
}
.pushable:focus:not(:focus-visible) {
    outline: none;
}

.move1 {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: url(img/poster-drop-animate1.png) repeat-x;
    background-size: cover;
    animation: drop1 7000s linear infinite;
}
@keyframes drop1 {
    from {
        background-position: 0 0;
    }
    to {
        background-position: 8000% 0;
    }
}
.move2 {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: url(img/poster-drop-animate2.png) repeat-x;
    background-size: cover;
    animation: drop2 5000s linear infinite;
}
@keyframes drop2 {
    from {
        background-position: 0 0;
    }
    to {
        background-position: 9000% 0;
    }
}

body {
    --translate: 200px;
}

.recessed {
    position: absolute;
    height: 100%;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    object-fit: cover;
}

@media (prefers-reduced-motion: no-preference) {
    .recessed {
        height: calc(100% + var(--translate));
        animation: parallax linear;
        animation-timeline: scroll(root);
    }

    .floating {
        transform: translateY(var(--pad));
        animation: float auto linear;
        animation-timeline: scroll(root);
    }
}

@keyframes parallax {
    from {
        transform: translateY(calc(var(--translate) * -1));
    }
    to {
        transform: translateY(var(--translate));
    }
}

@keyframes float {
    to {
        transform: translateY(calc(var(--pad) * -1));
    }
}

@layer base {
    *,
    *::before,
    *::after {
        box-sizing: border-box;
    }

    img {
        width: 100%;
        height: auto;
        display: block;
    }

    .wrapper {
        max-width: 1200px;
        margin: 0 auto;
        padding: calc(var(--pad) * 1.5) var(--pad);
    }

    header {
        padding: var(--pad) 0;
        position: relative;
        overflow: hidden;
        min-height: min(80vh, 700px);
        display: flex;
        align-items: center;
    }

    .content {
        position: relative;
        z-index: 1;
    }

    /*  .grid-img-wrapper {
    aspect-ratio: 4 / 3;
  } */

    .grid {
        display: grid;
    }

    .flow {
        > * + * {
            margin-block-start: 1rem;
        }

        > * + :where(.grid, figure),
        > :where(.grid, figure) + * {
            margin-block-start: calc(var(--pad) * 1.5);
        }
    }
}
